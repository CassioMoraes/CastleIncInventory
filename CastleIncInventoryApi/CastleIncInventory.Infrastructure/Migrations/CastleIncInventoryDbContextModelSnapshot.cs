// <auto-generated />
using System;
using CastleIncInventory.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CastleIncInventory.Infrastructure.Migrations
{
    [DbContext(typeof(CastleIncInventoryDbContext))]
    partial class CastleIncInventoryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("CastleIncInventory.Domain.Entities.Computer", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("ComputerManufacturerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Specifications")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("WarrantyExpirationDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ComputerManufacturerId");

                    b.ToTable("Computers");
                });

            modelBuilder.Entity("CastleIncInventory.Domain.Entities.ComputerManufacturer", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SerialRegex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ComputerManufacturers");
                });

            modelBuilder.Entity("CastleIncInventory.Domain.Entities.ComputerStatus", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LocalizedName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ComputerStatuses");
                });

            modelBuilder.Entity("CastleIncInventory.Domain.Entities.LinkComputerStatus", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AssignDate")
                        .HasColumnType("TEXT");

                    b.Property<uint>("ComputerId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("ComputerStatusId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ComputerId");

                    b.HasIndex("ComputerStatusId");

                    b.ToTable("LinkComputerStatuses");
                });

            modelBuilder.Entity("CastleIncInventory.Domain.Entities.LinkComputerUser", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AssignDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("AssignEndDate")
                        .HasColumnType("TEXT");

                    b.Property<uint>("ComputerId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ComputerId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("LinkComputerUsers");
                });

            modelBuilder.Entity("CastleIncInventory.Domain.Entities.User", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CastleIncInventory.Domain.Entities.Computer", b =>
                {
                    b.HasOne("CastleIncInventory.Domain.Entities.ComputerManufacturer", "Manufacturer")
                        .WithMany("Computers")
                        .HasForeignKey("ComputerManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("CastleIncInventory.Domain.Entities.LinkComputerStatus", b =>
                {
                    b.HasOne("CastleIncInventory.Domain.Entities.Computer", "Computer")
                        .WithMany("ComputerStatuses")
                        .HasForeignKey("ComputerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CastleIncInventory.Domain.Entities.ComputerStatus", "ComputerStatus")
                        .WithMany("ComputerLink")
                        .HasForeignKey("ComputerStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Computer");

                    b.Navigation("ComputerStatus");
                });

            modelBuilder.Entity("CastleIncInventory.Domain.Entities.LinkComputerUser", b =>
                {
                    b.HasOne("CastleIncInventory.Domain.Entities.Computer", "Computer")
                        .WithOne("ComputerUser")
                        .HasForeignKey("CastleIncInventory.Domain.Entities.LinkComputerUser", "ComputerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CastleIncInventory.Domain.Entities.User", "User")
                        .WithOne("LinkComputerUser")
                        .HasForeignKey("CastleIncInventory.Domain.Entities.LinkComputerUser", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Computer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CastleIncInventory.Domain.Entities.Computer", b =>
                {
                    b.Navigation("ComputerStatuses");

                    b.Navigation("ComputerUser")
                        .IsRequired();
                });

            modelBuilder.Entity("CastleIncInventory.Domain.Entities.ComputerManufacturer", b =>
                {
                    b.Navigation("Computers");
                });

            modelBuilder.Entity("CastleIncInventory.Domain.Entities.ComputerStatus", b =>
                {
                    b.Navigation("ComputerLink");
                });

            modelBuilder.Entity("CastleIncInventory.Domain.Entities.User", b =>
                {
                    b.Navigation("LinkComputerUser")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
